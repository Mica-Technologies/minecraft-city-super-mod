name: Build and Assemble Mod (Development Branch)

on:
  push:
    branches-ignore:
      - main
      - master

jobs:
  build:
    name: Assemble Mod and Publish Pre-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "8"

      - name: Save Branch Name to GITHUB_ENV
        id: branch-name
        run: echo "branch_name=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3
        if: ${{ always() }}
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        if: ${{ always() }}
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Assemble mod with Gradle
        run: ./gradlew assemble -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000 -Dorg.gradle.internal.http.socketTimeout=60000 -Dorg.gradle.internal.http.connectionTimeout=60000

      - name: Store YYYY-MM-DD-HH-mm-ss in GITHUB_ENV
        run: echo "time_stamp=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_ENV

      - name: Save Gradle version to GITHUB_ENV
        run: echo "version_number=$(${{github.workspace}}/gradlew -q printVersionNumber)" >> $GITHUB_ENV

      - name: Save Jar SHA1 to GITHUB_ENV
        run: |
          sha=`sha1sum ./build/libs/minecraft-city-super-mod-${{env.version_number}}.jar`
          echo "jar_sha1=$sha" >> $GITHUB_ENV

      - name: Copy assembled mod .jar to GitHub Actions workspace
        run: cp ./build/libs/minecraft-city-super-mod-${{env.version_number}}.jar ./minecraft-city-super-mod-${{env.version_number}}-dev${{ github.sha }}.jar

      - name: Create pre-release entry
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: csm-devbuild-${{ github.sha }}
          target_commitish: ${{ github.sha }}
          name: Dev Build ${{ env.time_stamp }}UTC (${{ github.sha }})
          body: Automatic build from branch ${{ env.branch_name }} of commit SHA ${{ github.sha }} at time ${{ env.time_stamp }}UTC. The SHA-1 sum of the JAR is ${{ env.jar_sha1 }}.
          draft: false
          prerelease: true
          generate_release_notes: true
          files: |
            minecraft-city-super-mod-${{env.version_number}}-dev${{ github.sha }}.jar
